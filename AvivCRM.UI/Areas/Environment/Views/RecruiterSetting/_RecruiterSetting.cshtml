@model List<AvivCRM.UI.Areas.Environment.ViewModels.RecruiterSettingVM>

<div class="modal fade" id="mdlRecruiterSettingShow" style="">
	<div class="modal-dialog" id="PlaceHolderHere">
	</div>
</div>

<div class="card" style="">
	<div class="card-header">
		<div class="row align-items-center">
			<div class="col">
				<h4 class="card-title">Recruiter Index</h4>
			</div><!--end col-->
			<div class="col-auto">
				<button type="button" class="btn btn-de-primary" data-toggle="ajax-modal"
						data-target="#mdlRecruiterSettingShow" data-url="@Url.Action("Create")">
					<i class="fas fa-plus me-2"></i>Add Recruiter Setting
				</button>
			</div><!--end col-->
		</div> <!--end row-->
	</div><!--end card-header-->
	<div class="card-body">
		<div class="table-responsive">
			<table class="table mb-0">
				<thead class="thead-light">
					<tr>
						<th>#</th>
						<th>Name</th>
						<th>Status</th>
						<th>Action</th>
					</tr><!--end tr-->
				</thead>

				<tbody>
					@for (var i = 0; i < Model.Count(); i++)
					{
						<tr>
							<td>@(i + 1)</td>
							<td>@Model[i].RecruiterName</td>
							<td>@(Model[i].RecruiterStatusName == "Yes" ? "Enabled" : "Disabled")</td>
							<td>
								<a id="deleteRS" name="Id" href="#" class="ms-2"
								   data-target="" data-url="@Url.Action($"Delete/{Model[i].Id}")">
									<i class="las la-trash-alt text-secondary font-16"></i>
								</a>
							</td>
						</tr>
						<!--end tr-->
					}
				</tbody>
			</table>
		</div>
	</div><!--end card-body-->
</div>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/matrica/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/matrica/assets/js/pages/app-custom.js" type="text/javascript"></script>
<script type="text/javascript">
		$(document).ready(function() {

		  let hash = document.location.hash;
		  let prefix = "";

		  //change hash url on page reload
		  if (hash) {
			$('.nav-tabs a[href=\"'+hash.replace(prefix,"")+'\"]').tab('show');
		  }

		  // change hash url on switch tab
		  $('.nav-tabs a').on('shown.bs.tab', function (e) {
			 window.location.hash = e.target.hash.replace("#", "#" + prefix);
		  });

		  // Popup Close on Outside Click disable
		 $('.modal').modal({backdrop: 'static', keyboard: false});
	});
</script>
<script type="text/javascript">
	$(document).on("click", "#deleteRS", function (e) {
		   e.preventDefault();

		   const swalWithBootstrapButtons = Swal.mixin({
			  customClass: {
				 confirmButton: "btn btn-de-primary",
				 cancelButton: "btn btn-de-danger me-2"
			  },
			  buttonsStyling: false
		   });
		   swalWithBootstrapButtons.fire({
			  title: "Are you sure?",
			  text: "Do You want to delete this?",
			  icon: "warning",
			  showCancelButton: true,
			  confirmButtonText: '<i class="mdi mdi-check-all me-2"></i>Delete',
			  cancelButtonText: '<i class="mdi mdi-window-close me-2"></i>Close',
			  // confirmButtonText: "Yes, delete it!",
			  // cancelButtonText: "No, cancel!",
			  reverseButtons: true,
			  allowOutsideClick: false
		   }).then((result) => {
			  if (result.isConfirmed) {
				 delProjectCategory(this);
			  } else if (
				 result.dismiss === Swal.DismissReason.cancel
			  ) {
				 // swalWithBootstrapButtons.fire({
				 // title: "Cancelled",
				 // text: "Your imaginary file is safe :)",
				 // icon: "error",
				 // 	allowOutsideClick: false
				 // });
			  }
		   });

		   function delProjectCategory(param) {
			  var url = $(param).data('url');
			  url = decodeURIComponent(url);
			  var sendData = "Id=" + url.split('/').filter(Boolean).pop() + "";
			  url = url.substring(0, url.lastIndexOf("/"));
			  var currentUrl = window.location.origin;
			  url = currentUrl + url;
			  $.post(url, sendData).done(function (data, status) {
				 $("#divBlocker").addClass("d-none").removeClass("screenblocker");
				 if (status == "success") {
							 swalWithBootstrapButtons.fire({ title: "Deleted!",
		 text: "Deleted successfully!",
		 icon: "success",
			  allowOutsideClick: false}).then(okay => {
		   if (okay) {
			location.reload();
		  }
		});

				 }
				 else{
					 swalWithBootstrapButtons.fire({
				 title: "Error Occured",
				 text: "Error Occured while Data deletion",
				 icon: "error",
					allowOutsideClick: false
				 });
				 }
			  })
		   }
		});
</script>