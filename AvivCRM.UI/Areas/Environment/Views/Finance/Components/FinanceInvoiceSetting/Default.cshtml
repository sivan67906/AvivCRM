@model AvivCRM.UI.Areas.Environment.ViewModels.FinanceInvoiceSettingVM
<link href="~/matrica/assets/libs/dropify/css/dropify.css" rel="stylesheet" type="text/css"/>

<div class="card">
	<div class="card-header">
		<h4 class="card-title">Invoice Index</h4>
	</div><!--end card-header-->
	<div class="card-body">
		<form id="FinanceInvoiceSettingUpdate" enctype="multipart/form-data">
			<input type="hidden" asp-for="@Model.Id"/>
			<div class="row">
				<div class="col-lg-4 form-group">
					<div class="card">
						<div class="card-header">
							<h4 class="card-title">Invoice Logo <i class="fa fa-question-circle" aria-hidden="true"></i></h4>
						</div><!--end card-header-->
						<div class="card-body">
							<input type="file" class="dropify" id="txtFILogoImage" name="FILogoImage" data-allowed-file-extensions="png jpg jpeg svg bmp" data-height="100" autocomplete="off">
						</div><!--end card-body-->
					</div>
				</div>
				<div class="col-lg-2">
				</div>
				<div class="col-lg-4 form-group">
					<div class="card">
						<div class="card-header">
							<h4 class="card-title">Authorised Signatory Signature<i class="fa fa-question-circle" aria-hidden="true"></i></h4>
						</div><!--end card-header-->
						<div class="card-body">
							<input type="file" class="dropify" id="txtFIAuthorisedImage" name="FIAuthorisedImage" data-allowed-file-extensions="png jpg jpeg svg bmp" data-height="100" autocomplete="off">
						</div><!--end card-body-->
					</div>
				</div>
				<div class="col-lg-2">
				</div>
			</div>
			<div class="row mt-2">
				<div class="col-lg-6">Language</div>
				<div class="col-lg-6">Due after <span class="text-danger">*</span></div>
			</div>
			<div class="row mt-2">
				<div class="col-lg-6">
					<div>
						@* <label for="dropdown">Choose an item:</label> *@
						<select name="FILanguageId" class="form-select" asp-for="@Model!.LanguageDDSettings!.SelectedLanguageId"
						        asp-items="@(new SelectList(Model!.LanguageDDSettings!.languageItems, "Id", "LanguageName"))">
							<option value="">--</option>
						</select>
					</div>
				</div>
				<div class="col-lg-6">
					<div class="input-group">
						<input id="txtFIDueAfter" type="number" class="form-control" name="FIDueAfter"
						       placeholder="15" value="@Model.FIDueAfter">
						<span class="input-group-text" id="dueDays">Day(s)</span>
					</div>
				</div>
			</div>
			<div class="row mt-4">
				<div class="col-lg-6">Send Reminder Before</div>
				<div class="col-lg-6"></div>
			</div>
			<div class="row mt-2">
				<div class="col-lg-6">
					<div class="input-group">
						<input id="txtFISendReminderBefore" type="number" class="form-control" name="FISendReminderBefore"
						       placeholder="15" value="@Model.FISendReminderBefore">
						<span class="input-group-text" id="sendReminder">Day(s)</span>
					</div>
				</div>
				<div class="col-lg-2" style="padding-right: 0px;">
					<label class="visually-hidden" for="inlineFormSelectPref">Preference</label>
					<select class="form-select" id="FISendReminderAfterEveryId" name="FISendReminderAfterEveryId">
						<option value="1">Send Reminder After</option>
						<option value="2">Send Reminder Before</option>
					</select>
				</div>
				<div class="col-lg-4" style="padding-left: 0px;">
					<div class="input-group">
						<input id="txtFISendReminderAfterEvery" type="number" class="form-control" name="FISendReminderAfterEvery"
						       placeholder="15" value="@Model.FISendReminderAfterEvery">
						<span class="input-group-text" id="dueDays">Day(s)</span>
					</div>
				</div>
			</div>
		</form>
		<form id="FinanceGeneralSettingUpdate" class="mt-2">
			<div class="row">
				@for (var i = 0; i < Model!.FICBGeneralSettings!.Count; i++)
				{
					<div class="col-lg-4">
						<div class="form-check custom-control custom-checkbox mt-2">
							<input type="hidden" name="FICBGeneralSettings[@i].IsChecked" value="false"/>
							<input type="checkbox" class="form-check-input form-check-input-custom" id="checkbox_FICBGeneralSettings_@Model.FICBGeneralSettings[i].Id" name="FICBGeneralSettings[@i].IsChecked" value="true" @(Model.FICBGeneralSettings[i].IsChecked ? "checked" : "")/>
							<label class="custom-control-label labelcustom" for="checkbox_FICBGeneralSettings_@Model.FICBGeneralSettings[i].Id">@Model.FICBGeneralSettings[i].Name</label>
							<input type="hidden" name="FICBGeneralSettings[@i].Id" value="@Model.FICBGeneralSettings[i].Id"/>
							<input type="hidden" name="FICBGeneralSettings[@i].Name" value="@Model.FICBGeneralSettings[i].Name"/>
						</div>
					</div>
				}
			</div>
		</form>
		<div class="row mt-4">
			<h4>Client info to show on invoice</h4>
		</div>
		<form id="FinanceClientInfoSettingUpdate">
			<div class="row">
				@for (var i = 0; i < Model!.FICBClientInfoSettings!.Count; i++)
				{
					<div class="col-lg-4">
						<div class="form-check custom-control custom-checkbox mt-2">
							<input type="hidden" name="FICBClientInfoSettings[@i].IsChecked" value="false"/>
							<input type="checkbox" class="form-check-input form-check-input-custom" id="checkbox_FICBClientInfoSettings_@Model.FICBClientInfoSettings[i].Id" name="FICBClientInfoSettings[@i].IsChecked" value="true" @(Model.FICBClientInfoSettings[i].IsChecked ? "checked" : "")/>
							<label class="custom-control-label labelcustom" for="checkbox_FICBClientInfoSettings_@Model.FICBClientInfoSettings[i].Id">@Model.FICBClientInfoSettings[i].Name</label>
							<input type="hidden" name="FICBClientInfoSettings[@i].Id" value="@Model.FICBClientInfoSettings[i].Id"/>
							<input type="hidden" name="FICBClientInfoSettings[@i].Name" value="@Model.FICBClientInfoSettings[i].Name"/>
						</div>
					</div>
				}
			</div>
		</form>

		<form id="FinanceTermsInfo">
			<div class="row mt-4">
				<div class="col-md-12">
					<label class="custom-control-label" for="reqShiftChange" style="font-size: 14px;">Terms and Conditions</label>
					<textarea id="txtFITerms" class="form-control" rows="5" placeholder="Thank you for your business."
							  name="FITerms">@Model.FITerms</textarea>
				</div>
			</div>
			<div class="row mt-4">
				<div class="col-md-12">
					<label class="custom-control-label" for="reqShiftChange" style="font-size: 14px;">Other information</label>
					<textarea id="txtFIOtherInfo" class="form-control" rows="5" placeholder="Enter Other information"
							  name="FIOtherInfo">@Model.FIOtherInfo</textarea>
				</div>
			</div>
		</form>
		<button id="btnUpdateFinanceInvoiceSetting" type="button" class="btn btn-de-primary mt-4 float-end">
			<b><i class="mdi mdi-check-all me-2"></i>Update</b>
		</button>
	</div><!--end card-body-->
</div>
<script src="~/matrica/assets/libs/dropify/js/dropify.js"></script>
<script type="text/javascript">

	function fnGenerateJsonString(cbData){
				var items = [];
					cbData.forEach(function(field) {
						var indexMatch = field.name.match(/\d+/);
						if (indexMatch) {
							var index = indexMatch[0];
							if (!items[index]) {
								items[index] = { Id: 0, Name: "", IsChecked: false };
							}
							if (field.name.includes("IsChecked")) {
								items[index].IsChecked = field.value === "true";
							} else if (field.name.includes("Id")) {
								items[index].Id = parseInt(field.value);
							} else if (field.name.includes("Name")) {
								items[index].Name = field.value;
							}
						}
					});
					items = items.filter(item => item != null);
					return JSON.stringify(items);
		}

	$(document).ready(function() {
		$('#btnUpdateFinanceInvoiceSetting').click(function() {
			const swalWithBootstrapButtons = Swal.mixin({
			  customClass: {
				 confirmButton: "btn btn-de-primary",
				 cancelButton: "btn btn-de-danger me-2"
			  },
			  buttonsStyling: false
		   });

			var formData = new FormData($('#FinanceInvoiceSettingUpdate')[0]);

			var cbGeneralData = $('#FinanceGeneralSettingUpdate').serializeArray();
			var cbClientInfoData = $('#FinanceClientInfoSettingUpdate').serializeArray();

				var jsonGeneralData = fnGenerateJsonString(cbGeneralData);
				var jsonClientInfoData = fnGenerateJsonString(cbClientInfoData);
				var txtFITermsData = $("#txtFITerms").val();
				var txtFIOtherInfoData = $("#txtFIOtherInfo").val();

				formData.append("FICBGeneralJsonSettings", jsonGeneralData);
				formData.append("FICBClientInfoJsonSettings", jsonClientInfoData);
				formData.append("FITerms", txtFITermsData);
				formData.append("FIOtherInfo", txtFIOtherInfoData);


			$.ajax({
				url: '@Url.Action("FinanceInvoiceSettingUpdate", "Finance")',
				type: 'POST',
				data: formData,
				processData: false,
				contentType: false,
				success: function(response) {
						 if (response.success) {
							 swalWithBootstrapButtons.fire({ title: "Updated!",
		 text: "Updated successfully!",
		 icon: "success",
			  allowOutsideClick: false}).then(okay => {
		   if (okay) {
			location.reload();
		  }
		});
				 }
				 else{
					 swalWithBootstrapButtons.fire({
				 title: "Error Occured",
				 text: "Error Occured while Data updation",
				 icon: "error",
					allowOutsideClick: false
				 });
				 }
				}
			});
		});
	});
</script>
<script type="text/javascript">
	$(".dropify").attr("data-default-file", window.location.origin + "/matrica/assets/images/logo-sm.png");
	$('.dropify').dropify();

	  const dropifyMessages = {
		default: "Choose a file",
		replace: "Drop a file or click to replace",
		remove: "Remove",
		error: "Some error occurred.",
	};
</script>