@using AvivCRM.UI.Areas.Environment.ViewModels
@model ProjectVM
<div class="row">
	<div class="col-12 col-lg-10 mx-auto">
		<div class="card">
			<div class="card-body">
				<!-- Nav tabs -->
				<ul class="nav nav-tabs" role="tablist">
					<li class="nav-item">
						<a class="nav-link active fw-semibold pt-0" data-bs-toggle="tab" href="#tbProjectSettings" role="tab">Project Settings</a>
					</li>
					<li class="nav-item">
						<a class="nav-link fw-semibold pt-0" data-bs-toggle="tab" href="#tbProjSettingsStatus" role="tab">Project Status Settings</a>
					</li>
					<li class="nav-item">
						<a class="nav-link fw-semibold pt-0" data-bs-toggle="tab" href="#tbProjCategory" role="tab">Category</a>
					</li>
				</ul>
			</div><!--end card-body-->
			<div class="card-body pt-0">
				<!-- Tab panes -->
				<div class="tab-content">
					<div class="tab-pane active show" id="tbProjectSettings" role="tabpanel">
						@await Component.InvokeAsync("ProjectSetting", new { projectSetting = Model.ProjectSetting })
					</div>

					<div class="tab-pane" id="tbProjSettingsStatus" role="tabpanel">
						@await Component.InvokeAsync("ProjectStatuses", new { projectStatuses = Model.ProjectStatuses })
					</div>

					<div class="tab-pane" id="tbProjCategory" role="tabpanel">
						@await Component.InvokeAsync("ProjectCategories", new { projectCategories = Model.ProjectCategories })
					</div>
				</div>
			</div><!--end card-body-->
		</div><!--end card-->

	</div>
</div>

@section Scripts {
	<script src="~/lib/jquery/dist/jquery.js"></script>
	<script src="/matrica/assets/libs/sweetalert2/sweetalert2.min.js"></script>
	<script src="~/matrica/assets/js/pages/app-custom.js" type="text/javascript"></script>

	<script type="text/javascript">
		 $(window).on('load', function() {
		 $('.modal').modal({backdrop: 'static', keyboard: false});
		});
	</script>

	<script>
		// Select the checkbox and the textbox container
		const checkbox = document.getElementById("InlineCheckbox");
		const textboxContainer = document.getElementById("ti");

		// Add event listener for checkbox
		checkbox.addEventListener("change", () => {
		  if (checkbox.checked) {
			// Show the textbox container when checkbox is checked
			textboxContainer.style.display = "block";
		  } else {
			// Hide the textbox container when checkbox is unchecked
			textboxContainer.style.display = "none";
		  }
		});
	</script>

}



